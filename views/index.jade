extends layout

block content
  script.

    function update() {
      var ts = ((new Date()).getTime() / 1000);
      var deltaTime = (ts - lastUnixTime).toFixed(2)
      lastUnixTime = ts
      $('.interval').html('Data call delta update time: ' + deltaTime)
      
      console.log('update')
      fetch('/data').then(res => res.json()).then(data =>{
        globalData = data
        $('.data').html((data.html))
        $('.deviceName').html('Live updating from: '+ data.content.app_id)
        $('.lastUpdate').html('Last updated: ' + Date(data.content.metadata.time))
      }).catch(() => {
        $('.data').html('INTERNAL CONNECTION ERROR')
      })


      // DATA POINTS
      fetch('/data-points').then(res => res.json()).then(data => {
        const dates = data.dates
        const amplitude = data.amplitude

        var avgValue = 0
        var samples = 3
        for(var i = amplitude.length - samples; i < amplitude.length; i++){
          avgValue += amplitude[i]
        }
        avgValue /= samples; 
        if(avgValue > 100) {
          
        }

        $('.status').html('Current status: ' + (avgValue > 100 ? 'ON' : 'OFF'))

        new Chart(document.getElementById("myChart"), {
          type: 'line',
          data: {
            labels: dates,
            datasets: [{ 
                data: amplitude,
                label: "Amplitude",
                borderColor: "#3e95cd",
                fill: false,
                pointRadius: 0
              }
            ]
          },
          options: {
            animation: false,
            title: {
              display: true,
              text: 'Washing machine amplitude for the last hour'
            }
          }
        });
      }).catch(() => {
        $('.status').html('Current status: INTERNAL CONNECTION ERROR')
      })   
    }
    update()

    var socket = io(window.location.href === 'http://localhost:3000/' ? 'http://localhost:4000/' : 'ws://' + window.location.host + ':4000');
    var socket = io('ws://dry-garden-18914.herokuapp.com:4000');

    socket.on('connect', function(){
      console.log('connect')
    });
    socket.on('disconnect', function(){
      console.log('disconnect')
    });
    
    var lastUnixTime = (new Date()).getTime() / 1000;
    socket.on('update', function(data) {
      update()
    });



    function getMapUrl () {
      fetch('/data').then(res => res.json()).then(data =>{
        const mapUrl = `https://maps.google.com/maps?q=${data.content.metadata.gateways[0].latitude},${data.content.metadata.gateways[0].longitude}&hl=es&z=14&output=embed`
        console.log({mapUrl})

        $('iframe').attr('src', mapUrl)
      })
    }
    getMapUrl()


  
  h1= "IOT device status"
  h2(class='interval')= 'Data call delta update time: '
  h2(class='status')= 'Current status: '
  canvas(id="myChart" width="400" height="200")

  p(class='deviceName')= "Live updating from..." 
  p(class='lastUpdate')= "Last updated: ..." 
  p(class='data')= "fetching..."



  div(style="float:right")
    h2()= "Main gateway location:"
    iframe(
      style="float:right"
      width="500"
      height="300"
      src=""
    ) 

    
